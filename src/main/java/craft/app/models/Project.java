package craft.app.models;

//import org.springframework.data.annotation.Id;

import javax.persistence.*;
import java.util.Date;

/**
 * Represents the Project object which is stored in the database and contains all of the
 * attributes of a project.
 */

@Entity
public class Project {
    
    
    /**
     * An autogenerated number which acts as the primary key in the database
     */
    @Id
    @GeneratedValue
    @Column(nullable = false, length=10)
    private long projectID;
    
    /**
     * A short title for the project, max length = 100 char
     */
    @Column(length = 100, nullable = false)
    private String title;
    
    /**
     * The longer text description of the project, max length = 6000 char
     */
    @Lob
    @Column(length = 6000)
    private String description;
    
    /**
     *  Whether the project is a sewing or knitting project
     */
    private String type;
    
    /**
     *  The date and time the project was created, autogenerated in the constructor
     */
    private Date dateListed;
    
    /**
     *  The image associated with the project, may be null
     */
    @Lob
    private byte[] projectImage;
    
    
    //https://stackoverflow.com/questions/2302802/object-references-an-unsaved-transient-instance
    // -save-the-transient-instance-be
    /**
     * The user who created the project. JoinColumn is used to associate it with the User stored
     * in the database
     */
    @ManyToOne(cascade = CascadeType.PERSIST)
    @JoinColumn(name="creatorID")
    private User creator;
    
    /**
     * Contains the ID of the project creator in Project objects arriving via http. Not persisted
     * into database - used to fetch the user with that ID.
     */
    @Transient
    private Long projectCreatorId;
    
    
    /**
     * If no parameters are provided, the date for the project will be set to the current date
     * and other values left empty
     *
     */
    public Project() {
        this.dateListed = new Date();
    }
    
    
    /**
     * When seeding the database, projects are created with parameters set, so this method is
     * used, which first creates a default project and then sets the variables
     * @param title
     * @param type
     * @param description
     * @param projectCreator
     */
    public Project(String title, String type, String description,
                   User projectCreator) {
        this();
        this.title = title;
        this.type = type;
        this.description = description;
        this.creator = projectCreator;
        
    }
    
    
    
    public long getProjectID() {
        return projectID;
    }
    
    public String getTitle() {
        return title;
    }
    
    public String getDescription() {
        return description;
    }
    
    public User getCreator() {
        return this.creator;
    }
    
    public String getType() {
        return type;
    }
    
    public Date getDateListed() {
        return dateListed;
    }
    
    public byte[] getProjectImage() {
        return projectImage;
    }
    
    public void setProjectImage(byte[] uploadedImage){
        this.projectImage = uploadedImage;
    }
    
    public void setCreator(User creator) {
        this.creator = creator;
    }
    
    public Long getProjectCreatorId() {
        return projectCreatorId;
    }
    
   
}
